#!/bin/bash

# How to use the WASL diff tool
# =============================

### Overview

# This utility compares textual WASL by formatting WASL deterministically and then
# diffing the resultant WASL. The formatter arranges the WASL in a specific
# sequence and alphanumerically orders all like model elements.

### Usage

# ```
# Usage:    <BP home>/tools/mc/bin/wasldiff <input1> <input2>
# ```

# Note: `left.diff` and `right.diff` will be produced by the tool
#       If diffing single files, they will be regular files
#       If diffing directories they will be a directory containing all the formatted
#       WASL files

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export WASL_BIN_DIR=$DIR/

#export CLASSPATH=<path_to_parser_jar>:<path_to_antlr_jar>

# check arguments
if [[ $# != 2 ]]; then
  echo "Usage:    ./wasldiff <input1> <input2>"
  exit 1
fi

# get the java classpath
if [[ $CLASSPATH == "" ]]; then
  CLASSPATH=$WASL_BIN_DIR/WASLParser.jar:$WASL_BIN_DIR/antlr-3.5.2-complete.jar
fi

# run WASL formatter
if [[ -f $1 && -f $2 ]]; then
  rm -rf left.diff right.diff
  #java -cp $CLASSPATH WaslFormatter -r -s -i $1 > left.diff
  #java -cp $CLASSPATH WaslFormatter -r -s -i $2 > right.diff
elif [[ -d $1 && -d $2 ]]; then
  rm -rf left.diff right.diff
  #java -cp $CLASSPATH WaslFormatter -r -s -i $1 -o left.diff
  cp -r $1 left.diff
  #java -cp $CLASSPATH MaslFormatter -r -s -i $2 -o right.diff
  cp -r $2 right.diff
else
  echo "Invalid inputs"
  exit 1
fi

# Sort function parameters.
find left.diff -name "*.fnp" -exec sort {} -o {} \;
find right.diff -name "*.fnp" -exec sort {} -o {} \;
# Sort the relationships file.
find left.diff -name "*.rel" -exec sort {} -o {} \;
find right.diff -name "*.rel" -exec sort {} -o {} \;
# Sort the subtypes file.
find left.diff -name "*.sub" -exec sort {} -o {} \;
find right.diff -name "*.sub" -exec sort {} -o {} \;
# Sort the event data.
find left.diff -name "*.evd" -exec sort {} -o {} \;
find right.diff -name "*.evd" -exec sort {} -o {} \;
# Sort the state transition tables.
find left.diff -name "*.stt" -exec sort -t, -k 1,1d -k 2,2n -k 4,4d {} -o {} \;
find right.diff -name "*.stt" -exec sort -t, -k 1,1d -k 2,2n -k 4,4d {} -o {} \;
# Sort the polymorphic event delegations.
find left.diff -name "*.pme" -exec sort {} -o {} \;
find right.diff -name "*.pme" -exec sort {} -o {} \;
# Sort the polymorphic event tests.
find left.diff -name "*.pme_test" -exec sort {} -o {} \;
find right.diff -name "*.pme_test" -exec sort {} -o {} \;
# Sort the types.
find left.diff -name "*.typ" -exec sort {} -o {} \;
find right.diff -name "*.typ" -exec sort {} -o {} \;
# Sort the function parameters file.
find left.diff -name "*.fnp" -exec sort {} -o {} \;
find right.diff -name "*.fnp" -exec sort {} -o {} \;
# Sort the requirements file.
find left.diff -name "*.req" -exec sort {} -o {} \;
find right.diff -name "*.req" -exec sort {} -o {} \;
# Sort the domain dump file.
find left.diff -name "*.dmp" -exec sort {} -o {} \;
find right.diff -name "*.dmp" -exec sort {} -o {} \;

# diff the directories
diff -wB left.diff right.diff | grep -v "Non_Existent.*Cannot_Happen" | grep -v "Non_Existent.*Ignore" | egrep -v "^[0-9]+.*" | grep -v '^---'
