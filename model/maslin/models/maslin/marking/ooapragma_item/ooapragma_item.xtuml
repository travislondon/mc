-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("7623b7c8-fd73-43d3-b970-93281fcf1400",
	'ooapragma_item',
	3806,
	'ooapragma_item',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("61801d85-1e3a-414c-857d-25ad1ecf4a60",
	"7623b7c8-fd73-43d3-b970-93281fcf1400",
	'render',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'return self.value;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0,
	0);
INSERT INTO O_TFR
	VALUES ("db52defc-b9dc-4155-a563-e8b6b30796ac",
	"7623b7c8-fd73-43d3-b970-93281fcf1400",
	'populate',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'pragma = param.pragma;
select any ooapopulation from instances of ooapopulation;
select one element related by pragma->ooapragma_list[R3803]->ooamarkable[R3802]->ooaelement[R3806];
value_len = STRING::strlen(s:param.value);

if ( ActionDialect::masl == ooapopulation.action_dialect )
  if ( "object" == element.type and "key_letter" == pragma.name )
    // class key letters
    new_val = STRING::substr(s:param.value, begin:1, end:value_len-1);
    current_object = ooapopulation.current_class;
    current_object.Key_Lett = new_val;
  else
    create object instance pragma_item of ooapragma_item;
    pragma_item.value = param.value;
    relate pragma_item to pragma across R3804;
    return;
  end if;
elif ( ActionDialect::asl == ooapopulation.action_dialect )
  if ( "domain" == element.type and "name" == pragma.name )
    // CDS domain name (actually "long name" which we will store as key letters for now.
    new_val = STRING::substr(s:param.value, begin:1, end:value_len-1);
    current_component = ooapopulation.current_component;
    current_component.Key_Lett = new_val;
  elif ( "domain" == element.type and "number" == pragma.name )
    // domain number
  elif ( "domain" == element.type and "kl" == pragma.name )
    // domain key letters (kl)
    new_val = STRING::substr(s:param.value, begin:1, end:value_len-1);
    current_component = ooapopulation.current_component;
    // CDS - This tag will match the name we have already assigned.
    // CDS - for now Key_Lett means long_name for MASL/WASL.
    //current_component.Key_Lett = new_val;
  elif ( "terminator" == element.type and "key_letter" == pragma.name )
    c_i = ooapopulation.current_interface;
    select any c_po related by c_i->C_IR[R4012]->C_PO[R4016];
    if ( not_empty c_po )
      new_val = STRING::substr(s:param.value, begin:1, end:value_len-1);
      c_po.Key_Lett = new_val;
    end if;
  elif ( "object" == element.type and "key_letter" == pragma.name )
    // class key letters
    new_val = STRING::substr(s:param.value, begin:1, end:value_len-1);
    current_object = ooapopulation.current_class;
    current_object.Key_Lett = new_val;
  elif ( "object" == element.type and "id" == pragma.name )
    // class number
    current_object = ooapopulation.current_class;
    current_object.Numb = STRING::atoi( s:param.value );
  elif ( "operation" == element.type and "operation_number" == pragma.name )
    current_class_op = ooapopulation.current_class_op;
    current_class_op.Numb = STRING::atoi( s:param.value );
  elif ( "routine" == element.type and "domain_operation_number" == pragma.name )
    current_domain_function = ooapopulation.current_domain_function;
    current_domain_function.Numb = STRING::atoi( s:param.value );
    current_executable_property = ooapopulation.current_executable_property;
    current_executable_property.Numb = STRING::atoi( s:param.value );
  elif ( "routine" == element.type and "terminator_operation_number" == pragma.name )
    current_executable_property = ooapopulation.current_executable_property;
    current_executable_property.Numb = STRING::atoi( s:param.value );
  elif ( "routine" == element.type and "external" == pragma.name and ooapopulation.action_dialect == ActionDialect::asl )
    // WASL maintains externals
    current_component = ooapopulation.current_component;
    current_domain_function = ooapopulation.current_domain_function;
    current_domain_function.Numb = STRING::atoi( s:param.value );
    // Unlink the function from the scenarios package and link into externals.
    select any externals_ep_pkg related by current_component->PE_PE[R8003]->EP_PKG[R8001] where ( selected.Name == "externals" );
    if ( empty externals_ep_pkg )
      externals_ep_pkg = ooapopulation.Component_newPackage(c_c:current_component, pkg_name:"externals");
    end if;
    select one pe_pe related by current_domain_function->PE_PE[R8001];
    select one functions_ep_pkg related by pe_pe->EP_PKG[R8000];
    unrelate pe_pe from functions_ep_pkg across R8000;
    relate pe_pe to externals_ep_pkg across R8000;
  elif ( "routine" == element.type and "scenario" == pragma.name )
    current_domain_function = ooapopulation.current_domain_function;
    current_domain_function.Numb = STRING::atoi( s:param.value );
    // Keep the scenario marking.  MASL uses it.  WASL might use it.
    create object instance pragma_item of ooapragma_item;
    pragma_item.value = param.value;
    relate pragma_item to pragma across R3804;
    return;
  else
    create object instance pragma_item of ooapragma_item;
    pragma_item.value = param.value;
    relate pragma_item to pragma across R3804;
    return;
  end if;
else
  // not masl not asl
end if;

// clean up
select one pragma_list related by pragma->ooapragma_list[R3803];
unrelate pragma from pragma_list across R3803;
delete object instance pragma;',
	1,
	'',
	"61801d85-1e3a-414c-857d-25ad1ecf4a60",
	0,
	0);
INSERT INTO O_TPARM
	VALUES ("9d5fd992-2728-4e4d-86a8-791124954024",
	"db52defc-b9dc-4155-a563-e8b6b30796ac",
	'value',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("a0f4547f-708a-4c9d-8f86-85d3d50e9056",
	"db52defc-b9dc-4155-a563-e8b6b30796ac",
	'pragma',
	"e09ea014-4e29-4685-9e51-04ec59136f92",
	0,
	'',
	"9d5fd992-2728-4e4d-86a8-791124954024",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("e09ea014-4e29-4685-9e51-04ec59136f92",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<ooapragma>',
	'',
	'',
	'../marking.xtuml');
INSERT INTO O_TFR
	VALUES ("1d4a14e0-3f5e-401e-b0a9-28fedceb119f",
	"7623b7c8-fd73-43d3-b970-93281fcf1400",
	'destruct',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'delete object instance self;',
	1,
	'',
	"db52defc-b9dc-4155-a563-e8b6b30796ac",
	0,
	0);
INSERT INTO O_NBATTR
	VALUES ("a61e48fa-a69d-4ae7-85df-504717394339",
	"7623b7c8-fd73-43d3-b970-93281fcf1400");
INSERT INTO O_BATTR
	VALUES ("a61e48fa-a69d-4ae7-85df-504717394339",
	"7623b7c8-fd73-43d3-b970-93281fcf1400");
INSERT INTO O_ATTR
	VALUES ("a61e48fa-a69d-4ae7-85df-504717394339",
	"7623b7c8-fd73-43d3-b970-93281fcf1400",
	"00000000-0000-0000-0000-000000000000",
	'value',
	'',
	'',
	'value',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"7623b7c8-fd73-43d3-b970-93281fcf1400");
INSERT INTO O_ID
	VALUES (1,
	"7623b7c8-fd73-43d3-b970-93281fcf1400");
INSERT INTO O_ID
	VALUES (2,
	"7623b7c8-fd73-43d3-b970-93281fcf1400");
INSERT INTO PE_PE
	VALUES ("7623b7c8-fd73-43d3-b970-93281fcf1400",
	1,
	"a436d690-d535-4111-926b-af7c5717f2da",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("a436d690-d535-4111-926b-af7c5717f2da",
	"c14b4fcc-99ce-417f-85d7-ac22e2d20288",
	"c14b4fcc-99ce-417f-85d7-ac22e2d20288",
	'marking',
	'',
	0,
	'../marking.xtuml');
