-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("669c9e5d-eb78-45b7-866e-089542dfb839",
	'routine',
	3704,
	'routine',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'populate',
	'',
	"84c27ba7-4fbf-422a-b84f-b3c47e4a1019",
	0,
	'parent_domain = param.parent_domain;
parent_terminator = param.parent_terminator;

activity = activity::populate( name:param.name );
create object instance routine of routine;
routine.visibility = param.visibility;
routine.number = 0;
if ( "" != param.number )
  // routine number is optional.
  routine.number = STRING::atoi( s:param.number );
end if;
if ( not_empty parent_terminator )
  relate routine to parent_terminator across R3791;
elif ( not_empty parent_domain )
  relate routine to parent_domain across R3790;
else
  TRACE::log( flavor:"failure", id:73, message:"routine::populate no domain and no terminator" );
end if;
relate routine to activity across R3704;
markable = markable::populate( name:"routine" );
relate activity to markable across R3783;

return routine;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TPARM
	VALUES ("ca8187cf-a56b-4110-a85f-8c1927ffb12f",
	"b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	'visibility',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("bde79d70-72b4-4487-8dd9-966cd7f8ddb8",
	"b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"ca8187cf-a56b-4110-a85f-8c1927ffb12f",
	'');
INSERT INTO O_TPARM
	VALUES ("e321632d-2048-45e6-86c7-36db4bceb004",
	"b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	'parent_domain',
	"baca163b-e8d7-44c7-b0e0-61776ffb7cae",
	0,
	'',
	"7898e553-ad8b-45ec-82a6-6c3edc9958aa",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("baca163b-e8d7-44c7-b0e0-61776ffb7cae",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<domain>',
	'',
	'',
	'../masl.xtuml');
INSERT INTO O_TPARM
	VALUES ("d57f0ba4-8b3b-4d27-bd38-cf4c5b703b60",
	"b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	'parent_terminator',
	"a2661e87-6030-4167-bef8-2ff6c815e67e",
	0,
	'',
	"e321632d-2048-45e6-86c7-36db4bceb004",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("a2661e87-6030-4167-bef8-2ff6c815e67e",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<terminator>',
	'',
	'',
	'../masl.xtuml');
INSERT INTO O_TPARM
	VALUES ("7898e553-ad8b-45ec-82a6-6c3edc9958aa",
	"b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	'number',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"bde79d70-72b4-4487-8dd9-966cd7f8ddb8",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("84c27ba7-4fbf-422a-b84f-b3c47e4a1019",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<routine>',
	'',
	'',
	'../masl.xtuml');
INSERT INTO O_TFR
	VALUES ("f9b377c0-d337-4e40-9132-58d2adc9509f",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'render',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'name = param.name;
visibility = self.visibility;
flavor = "service";
returntype = "";
select one returntyperef related by self->typeref[R3792];
if ( not_empty returntyperef )
  returntype = returntyperef.body;
end if;

if ( "MASL" == genfile::architecture() )

  T::include( file:"masl/t.routine_begin.masl" );
  select one parameter related by self->activity[R3704]->parameter[R3705.''carries first''];
  if ( not_empty parameter )
    rdirection = parameter.render( direction:"" );
  end if;
  T::include( file:"masl/t.routine_end.masl" );

elif ( "WASL" == genfile::architecture() )

  // In WASL, a terminator service gets the key letters from the terminator.
  scope = "";
  select one domain related by self->domain[R3790];
  if ( empty domain )
    // must be terminator (and not domain function)
    select one terminator related by self->terminator[R3791];
    if ( not_empty terminator )
      select one domain related by self->terminator[R3791]->domain[R3702];
      scope = domain.name + ";" + terminator.key_letters + STRING::itoa( i:self.number );
    end if;
  else
    scope = domain.name + STRING::itoa( i:self.number );
  end if;

  T::include( file:"wasl/t.routine_begin.wasl" );
  select one activity related by self->activity[R3704];
  activity.render();

else
  //
end if;',
	1,
	'',
	"b5d33493-0c68-42fd-90e7-2e4e5910aea9",
	0);
INSERT INTO O_TPARM
	VALUES ("50f1c918-0b50-448a-a847-0df4f6816afe",
	"f9b377c0-d337-4e40-9132-58d2adc9509f",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("8e678211-5bb7-4f1f-8485-4ab32c2a9867",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'validate',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'valid = true;

// validate visibility
if ( "public" != self.visibility and "private" != self.visibility )
  TRACE::log( flavor:"failure", id:101, message:"invalid visibility for routine: " + self.visibility );
  valid = false;
  return valid;		// short circuit
end if;

// validate children
select one child_activity related by self->activity[R3704];
if ( not_empty child_activity )
  valid = child_activity.validate();
  if ( false == valid )
    return valid;	// short circuit
  end if;
else
  TRACE::log( flavor:"failure", id:101, message:"no activity for routine" );
  valid = false;
  return valid;		// short circuit
end if;

select one returntyperef related by self->typeref[R3792];
if ( not_empty returntyperef )
  valid = returntyperef.validate();
end if;

return valid;',
	1,
	'',
	"4df6f6c4-2af6-4c34-b213-dc3b0c830908",
	0);
INSERT INTO O_TFR
	VALUES ("378ca2df-eca4-40ae-a536-94da7f32f53e",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'dispose',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// unrelate from parent (domain or terminator) and delete

select one domain related by self->domain[R3790];
if ( not_empty domain )
  unrelate self from domain across R3790;
else
  select one terminator related by self->terminator[R3791];
  if ( not_empty terminator )
    unrelate self from terminator across R3791;
  end if;
end if;

delete object instance self;',
	1,
	'',
	"8e678211-5bb7-4f1f-8485-4ab32c2a9867",
	0);
INSERT INTO O_TFR
	VALUES ("e51aa789-c1e2-4b5d-9c5e-272cccfeee56",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'render_definition',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'routine = self;
activity = param.activity;

select one terminator related by self->terminator[R3791];
select one domain related by terminator->domain[R3702];

if ( "MASL" == genfile::architecture() )

  if ( not_empty terminator and not_empty domain )
    T::include( file:"masl/t.terminator_service_def_begin.masl" );
  else
    select one domain related by self->domain[R3790];
    if ( not_empty domain )
      T::include( file:"masl/t.domain_service_def_begin.masl" );
    end if;
  end if;

  // render parameters
  select one parameter related by activity->parameter[R3705.''carries first''];
  if ( not_empty parameter )
    rdirection = parameter.render( direction:"" );
  end if;
  
  // render return
  returntype = "";
  select one returntyperef related by self->typeref[R3792];
  if ( not_empty returntyperef )
    returntype = returntyperef.body;
  end if;
  T::include( file:"masl/t.service_def_middle.masl" );

elif ( "WASL" == genfile::architecture() )

  comment = "";
  select any description related by activity->markable[R3783]->element[R3786]->description[R3796];
  if ( not_empty description )
    comment = description.text;
  end if;
  comment = STRING::trim( s: comment );
  if ( not_empty terminator and not_empty domain )
    T::include( file:"wasl/t.terminator_service_def_begin.wasl" );
  else
    select one domain related by self->domain[R3790];
    if ( not_empty domain )
      // TODO - public/private may not be a good mechanism to distinguish scenarios from functions
      if ( "private" == self.visibility )
        T::include( file:"wasl/t.scenario_def_begin.wasl" );
      else
        T::include( file:"wasl/t.domain_service_def_begin.wasl" );
      end if;
    end if;
  end if;

  // render input parameters
  rdirection = "";
  select one parameter related by activity->parameter[R3705.''carries first''];
  if ( not_empty parameter )
    parameter.render_definition( direction:"in" );
  end if;
  T::include( file:"wasl/t.activity_def_input.wasl" );

  // render output parameters
  if ( not_empty parameter )
    parameter.render_definition( direction:"out" );
  end if;
  T::include( file:"wasl/t.activity_def_output.wasl" );

else
  //
end if;  

// render code block
select one code_block related by activity->code_block[R3794];
if ( not_empty code_block )
  code_block.render();
end if;

if ( "WASL" == genfile::architecture() )
  T::include( file:"wasl/t.activity_def_end.wasl" );
end if;
',
	1,
	'',
	"f9b377c0-d337-4e40-9132-58d2adc9509f",
	0);
INSERT INTO O_TPARM
	VALUES ("2192f0a0-a169-4253-ac46-2e54a7586ab7",
	"e51aa789-c1e2-4b5d-9c5e-272cccfeee56",
	'activity',
	"1b2a92d7-e97c-4b62-9e83-f7969ef6a845",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("1b2a92d7-e97c-4b62-9e83-f7969ef6a845",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<activity>',
	'',
	'',
	'../masl.xtuml');
INSERT INTO O_TFR
	VALUES ("4df6f6c4-2af6-4c34-b213-dc3b0c830908",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'render_marking',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'marking = "";
select any pragma related by self->activity[R3704]->markable[R3783]->pragma_list[R3782]->pragma[R3781] where ( selected.name == "cca" );
select any terminator_pragma related by self->terminator[R3791]->markable[R3783]->pragma_list[R3782]->pragma[R3781] where ( selected.name == "cca" );
if ( not_empty pragma or not_empty terminator_pragma )
  marking = ",PROCESSOR,CCA";
end if;
select any pragma related by self->activity[R3704]->markable[R3783]->pragma_list[R3782]->pragma[R3781] where ( selected.name == "tca" );
select any terminator_pragma related by self->terminator[R3791]->markable[R3783]->pragma_list[R3782]->pragma[R3781] where ( selected.name == "tca" );
if ( not_empty pragma or not_empty terminator_pragma )
  marking = ",PROCESSOR,TCA";
end if;
select any pragma related by self->activity[R3704]->markable[R3783]->pragma_list[R3782]->pragma[R3781] where ( selected.name == "oaid_derived" );
if ( not_empty pragma )
  marking = ",OAID_DERIVED,OAID_DERIVED";
end if;
return marking;
',
	1,
	'',
	"c4ebf338-8569-4f87-a0a6-e55a162981c9",
	0);
INSERT INTO O_TFR
	VALUES ("c4ebf338-8569-4f87-a0a6-e55a162981c9",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	'render_external',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'routine = self;
activity = param.activity;

if ( "MASL" == genfile::architecture() )
  // not part of MASL
elif ( "WASL" == genfile::architecture() )

  T::include( file:"wasl/t.external_def_begin.wasl" );
  // render code block
  select one code_block related by activity->code_block[R3794];
  if ( not_empty code_block )
    code_block.render();
  end if;
  T::include( file:"wasl/t.external_def_end.wasl" );

end if;  

',
	1,
	'',
	"e51aa789-c1e2-4b5d-9c5e-272cccfeee56",
	0);
INSERT INTO O_TPARM
	VALUES ("88c58383-e138-4c64-a9e2-47a031482be1",
	"c4ebf338-8569-4f87-a0a6-e55a162981c9",
	'activity',
	"1b2a92d7-e97c-4b62-9e83-f7969ef6a845",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_NBATTR
	VALUES ("8aca0e9a-cee8-4a45-a146-5b9cd6bbe8af",
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO O_BATTR
	VALUES ("8aca0e9a-cee8-4a45-a146-5b9cd6bbe8af",
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO O_ATTR
	VALUES ("8aca0e9a-cee8-4a45-a146-5b9cd6bbe8af",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	"00000000-0000-0000-0000-000000000000",
	'visibility',
	'',
	'',
	'visibility',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("ffb9d01c-c661-4d32-b541-1d12c4b55a09",
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO O_BATTR
	VALUES ("ffb9d01c-c661-4d32-b541-1d12c4b55a09",
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO O_ATTR
	VALUES ("ffb9d01c-c661-4d32-b541-1d12c4b55a09",
	"669c9e5d-eb78-45b7-866e-089542dfb839",
	"8aca0e9a-cee8-4a45-a146-5b9cd6bbe8af",
	'number',
	'',
	'',
	'number',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO O_ID
	VALUES (1,
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO O_ID
	VALUES (2,
	"669c9e5d-eb78-45b7-866e-089542dfb839");
INSERT INTO PE_PE
	VALUES ("669c9e5d-eb78-45b7-866e-089542dfb839",
	1,
	"ceafde1b-ef7d-4cdb-ab88-6866d249a397",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("ceafde1b-ef7d-4cdb-ab88-6866d249a397",
	"0c88bc32-05c8-40cf-8e56-04848518b4a9",
	"0c88bc32-05c8-40cf-8e56-04848518b4a9",
	'masl',
	'',
	0,
	'../masl.xtuml');
